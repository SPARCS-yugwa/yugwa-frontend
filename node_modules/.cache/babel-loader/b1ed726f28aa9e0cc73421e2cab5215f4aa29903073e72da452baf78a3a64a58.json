{"ast":null,"code":"// src/utils/http-commons.js\nimport axios from \"axios\";\nconst BASE_URL = \"https://sodamsodam.site/api\";\n// const BASE_URL = \"http://localhost:8080/api\";\n\n// 경로 예외 목록\nconst excludedPaths = [\"/members/kakao/login\", \"/members/kakao/oauth\", \"/members/kakao/login/test\", \"/members/kakao/oauth/test\"];\n\n// local axios instance\nfunction ddubamAxios(path) {\n  const instance = axios.create({\n    baseURL: `${BASE_URL}${path}`\n  });\n\n  // request default settings\n  instance.defaults.headers.common[\"Authorization\"] = \"\";\n  instance.defaults.headers.post[\"Content-Type\"] = \"application/json\";\n  instance.defaults.headers.put[\"Content-Type\"] = \"application/json\";\n\n  // request interceptor\n  instance.interceptors.request.use(config => {\n    // 제외할 경로에 대한 헤더 제거\n    const isExcludedPath = excludedPaths.some(excludedPath => config.url.includes(excludedPath));\n    if (!isExcludedPath) {\n      // 토큰 설정\n      let auth = localStorage.getItem(\"token\");\n      if (auth) {\n        config.headers.Authorization = `Bearer ${auth}`;\n      }\n    }\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n\n  // response interceptor\n  instance.interceptors.response.use(response => {\n    return response;\n  }, error => {\n    var _error$response, _error$response2;\n    let status = (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status;\n    let message = (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.message;\n    console.log(`예외 발생. 코드:${status}, message:${message}`);\n    return Promise.reject(error);\n  });\n  return instance;\n}\nexport { ddubamAxios };","map":{"version":3,"names":["axios","BASE_URL","excludedPaths","ddubamAxios","path","instance","create","baseURL","defaults","headers","common","post","put","interceptors","request","use","config","isExcludedPath","some","excludedPath","url","includes","auth","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","_error$response2","status","message","console","log"],"sources":["/Users/wooyoung/Desktop/CODING/cote_python/yugwa-frontend/src/utils/http-commons.js"],"sourcesContent":["// src/utils/http-commons.js\nimport axios from \"axios\";\n\nconst BASE_URL = \"https://sodamsodam.site/api\";\n// const BASE_URL = \"http://localhost:8080/api\";\n\n// 경로 예외 목록\nconst excludedPaths = [\n  \"/members/kakao/login\",\n  \"/members/kakao/oauth\",\n  \"/members/kakao/login/test\",\n  \"/members/kakao/oauth/test\",\n];\n\n// local axios instance\nfunction ddubamAxios(path) {\n  const instance = axios.create({\n    baseURL: `${BASE_URL}${path}`,\n  });\n\n  // request default settings\n  instance.defaults.headers.common[\"Authorization\"] = \"\";\n  instance.defaults.headers.post[\"Content-Type\"] = \"application/json\";\n  instance.defaults.headers.put[\"Content-Type\"] = \"application/json\";\n\n  // request interceptor\n  instance.interceptors.request.use(\n    (config) => {\n      // 제외할 경로에 대한 헤더 제거\n      const isExcludedPath = excludedPaths.some((excludedPath) =>\n        config.url.includes(excludedPath)\n      );\n\n      if (!isExcludedPath) {\n        // 토큰 설정\n        let auth = localStorage.getItem(\"token\");\n\n        if (auth) {\n          config.headers.Authorization = `Bearer ${auth}`;\n        }\n      }\n\n      return config;\n    },\n    (error) => {\n      return Promise.reject(error);\n    }\n  );\n\n  // response interceptor\n  instance.interceptors.response.use(\n    (response) => {\n      return response;\n    },\n    (error) => {\n      let status = error.response?.status;\n      let message = error.response?.message;\n\n      console.log(`예외 발생. 코드:${status}, message:${message}`);\n      return Promise.reject(error);\n    }\n  );\n\n  return instance;\n}\n\nexport { ddubamAxios };\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,6BAA6B;AAC9C;;AAEA;AACA,MAAMC,aAAa,GAAG,CACpB,sBAAsB,EACtB,sBAAsB,EACtB,2BAA2B,EAC3B,2BAA2B,CAC5B;;AAED;AACA,SAASC,WAAWA,CAACC,IAAI,EAAE;EACzB,MAAMC,QAAQ,GAAGL,KAAK,CAACM,MAAM,CAAC;IAC5BC,OAAO,EAAE,GAAGN,QAAQ,GAAGG,IAAI;EAC7B,CAAC,CAAC;;EAEF;EACAC,QAAQ,CAACG,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,EAAE;EACtDL,QAAQ,CAACG,QAAQ,CAACC,OAAO,CAACE,IAAI,CAAC,cAAc,CAAC,GAAG,kBAAkB;EACnEN,QAAQ,CAACG,QAAQ,CAACC,OAAO,CAACG,GAAG,CAAC,cAAc,CAAC,GAAG,kBAAkB;;EAElE;EACAP,QAAQ,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,IAAK;IACV;IACA,MAAMC,cAAc,GAAGf,aAAa,CAACgB,IAAI,CAAEC,YAAY,IACrDH,MAAM,CAACI,GAAG,CAACC,QAAQ,CAACF,YAAY,CAClC,CAAC;IAED,IAAI,CAACF,cAAc,EAAE;MACnB;MACA,IAAIK,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAExC,IAAIF,IAAI,EAAE;QACRN,MAAM,CAACP,OAAO,CAACgB,aAAa,GAAG,UAAUH,IAAI,EAAE;MACjD;IACF;IAEA,OAAON,MAAM;EACf,CAAC,EACAU,KAAK,IAAK;IACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;EAC9B,CACF,CAAC;;EAED;EACArB,QAAQ,CAACQ,YAAY,CAACgB,QAAQ,CAACd,GAAG,CAC/Bc,QAAQ,IAAK;IACZ,OAAOA,QAAQ;EACjB,CAAC,EACAH,KAAK,IAAK;IAAA,IAAAI,eAAA,EAAAC,gBAAA;IACT,IAAIC,MAAM,IAAAF,eAAA,GAAGJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBE,MAAM;IACnC,IAAIC,OAAO,IAAAF,gBAAA,GAAGL,KAAK,CAACG,QAAQ,cAAAE,gBAAA,uBAAdA,gBAAA,CAAgBE,OAAO;IAErCC,OAAO,CAACC,GAAG,CAAC,aAAaH,MAAM,aAAaC,OAAO,EAAE,CAAC;IACtD,OAAON,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;EAC9B,CACF,CAAC;EAED,OAAOrB,QAAQ;AACjB;AAEA,SAASF,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}